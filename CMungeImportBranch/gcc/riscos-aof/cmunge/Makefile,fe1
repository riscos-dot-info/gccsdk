# Project:   CMunge Makefile

# MakeDir:
#  o
#  o32
#  aif
#  aif32

# Toolflags:

INCLUDE = C:,

CCflags = -c -fa -depend !Depend -I$(INCLUDE) -throwback
CCflags32 = -apcs 3/32 -c -fa -depend !Depend -I$(INCLUDE) -throwback
CCflagsM = -c -g -fa -depend !Depend -I$(INCLUDE) -throwback

WIPE = wipe
WIPEFLAGS = F~C~R~V

CDIR = c
ODIR = o
HDIR = h
C++flags = -c -g -depend !Depend -I$(INCLUDE) -throwback
LinkflagsD = -aif -d -c++ -o $@
Linkflags = -aif -c++ -o $@
PartLinkflags = -aof -c++ -o $@

#ObjAsmflags = -g -throwback -NoCache -depend !Depend
ObjAsmflags = -throwback -NoCache -depend !Depend

CMHGflags =
LibFileflags = -c -o $@
Squeezeflags = -o $@

.SUFFIXES:      .o .om .o32 .c

.c.o:;   cc $(CCflags) -o $@ $<
.c.o32:; cc $(ccflags32) -o $@ $<

.c.om:; MemCheck.CC cc $(ccflagsM) -o $@ $<

OS_FILES =

OC_FILES = \
        o.apcscli       \
        o.assemble      \
        o.datestamp     \
        o.error         \
        o.main          \
        o.mem           \
        o.options       \
        o.readfile      \
        o.str           \
        o.gfile         \
        o.throwback     \
        o.writeheader   \
        o.writeexport   \
        o.writefile     \
        o.blank         \
        o.format        \
        o.system        \
        o.filename      \
        o.comments

OC32_FILES = \
        o32.apcscli       \
        o32.assemble      \
        o32.datestamp     \
        o32.error         \
        o32.main          \
        o32.mem           \
        o32.options       \
        o32.readfile      \
        o32.str           \
        o32.gfile         \
        o32.throwback     \
        o32.writeheader   \
        o32.writeexport   \
        o32.writefile     \
        o32.blank         \
        o32.format        \
        o32.system        \
        o32.filename      \
        o32.comments

OMC_FILES = \
        om.apcscli      \
        om.assemble     \
        om.datestamp    \
        om.error        \
        om.main         \
        om.mem          \
        om.options      \
        om.readfile     \
        om.str          \
        om.gfile        \
        om.throwback    \
        om.writeheader  \
        om.writeexport  \
        om.writefile    \
        om.blank        \
        om.format       \
        om.system       \
        om.filename     \
        om.comments

LIBS = C:o.stubs
LIBS32 = C:o.stubsG

# Final targets:
# We still generate the 26 bit version so that we can compare the output
Most: aif.cmunge aif32.cmunge

All: aif.cmunge aif32.cmunge aif.cmungeM

Examples: aif.cmunge aif32.cmunge
        -examples.!Make
        dir ^

aif.cmunge: aif.cmungeU
        Squeeze aif.cmungeU aif.cmunge
aif32.cmunge: aif32.cmungeU
        Squeeze aif32.cmungeU aif32.cmunge

aif.cmungeU: $(OC_FILES) $(OS_FILES)
        link $(linkflags) $(OC_FILES) $(OS_FILES) $(LIBS)

aif32.cmungeU: $(OC32_FILES) $(OS32_FILES)
        link $(linkflags) $(OC32_FILES) $(OS32_FILES) $(LIBS32)

aif.cmungeM: $(OMC_FILES) $(OS_FILES)
        link $(linkflagsD) $(OMC_FILES) $(OS_FILES) $(LIBS) \
        MemCheck:o.MC

clean:
        -wipe aif ~C ~V R F
        -wipe aif32 ~C ~V R F
        -wipe o ~C ~V R F
        -wipe o32 ~C ~V R F
        -wipe om ~C ~V R F
        -if "$(RELEASE)" <> "" Then wipe $(RELEASE) ~C ~V R F
        -wipe Release ~C ~V R F
        dir Examples
        /!Clean
        dir ^

release: aif32.cmunge
        @echo -- Source $(RELEASE)
        cdir $(RELEASE)
        cdir $(RELEASE).Source
        wipe $(RELEASE).Source ~C~VR
        cdir $(RELEASE).Source
        cdir $(RELEASE).Source.Examples
        cdir $(RELEASE).Source.Examples.cmhg
        cdir $(RELEASE).Source.Examples.h
        cdir $(RELEASE).Source.Examples.hdr
        cdir $(RELEASE).Source.Examples.inc
        cdir $(RELEASE).Source.Examples.o
        cdir $(RELEASE).Source.Examples.s
        cdir $(RELEASE).Source.linux
        copy Docs          $(RELEASE).Source.Docs ~C~VR
        IfThere VersionLog Then copy VersionLog $(RELEASE).Source.Docs.History ~C~VR
        copy Examples.!*   $(RELEASE).Source.Examples.* ~C~VR
        copy Examples.inc  $(RELEASE).Source.Examples.inc ~C~VR
        copy Examples.cmhg $(RELEASE).Source.Examples.cmhg ~C~VR
        copy c             $(RELEASE).Source.c ~C~VR
        copy linux.mklinks $(RELEASE).Source.linux.mklinks ~C~VR
        copy h             $(RELEASE).Source.h ~C~VR
        copy Makefile      $(RELEASE).Source.Makefile ~C~VR
        IfThere Resources Then Copy Resources.!Mk* $(RELEASE).Source.* ~C~VR Else Copy !Mk* $(RELEASE).Source.* ~C~VR
        copy VersionNum    $(RELEASE).Source.VersionNum ~C~VR
        @echo -- Binary $(RELEASE)
        cdir $(RELEASE).Binary
        wipe $(RELEASE).Binary ~C~VR
        cdir $(RELEASE).Binary
        copy Docs          $(RELEASE).Binary.Docs ~C~VR
        IfThere VersionLog Then copy VersionLog $(RELEASE).Binary.Docs.History ~C~VR
        copy aif32.cmunge  $(RELEASE).Binary.cmunge ~C~VR
        @echo -- Archive
        IfThere Run:losecvs Then losecvs $(RELEASE)

export:
        @echo [No export of CMunge]

# User-editable dependencies:

# Static dependencies:

# Dynamic dependencies:
